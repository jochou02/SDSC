{"ast":null,"code":"var _jsxFileName = \"/Users/evelyn/Documents/GitHub/UC-Socially-Undead/src/frontend/src/pages/Karma.js\";\nimport React, { Component } from 'react'; // eslint-disable-next-line\n\nimport LoggedInTester from '../buttons/LoggedInTester';\nimport styles from '../styles/Karma.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Karma extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ShowProfile = _ref => {\n      let {\n        foo\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID: \", foo['id']]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.name,\n          children: [foo['first_name'], ' ', foo['last_name']]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", foo['email']]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"College: \", foo['user_college']]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Karma: \", foo['user_karma']]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.state = {\n      foo: [],\n      add_karma: 0,\n      user_id: 0,\n      other_user_id: this.props.user_id\n    };\n    this.addKarma = this.addKarma.bind(this);\n  }\n\n  componentDidMount() {\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n\n    if (localStorage.getItem('auth-token')) {\n      headers[\"Authorization\"] = localStorage.getItem('auth-token');\n    }\n\n    fetch('http://127.0.0.1:8000/account/get_user_info/', {\n      headers\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        foo: data\n      });\n      this.setState({\n        user_id: data.id\n      });\n    }).catch(console.log);\n  }\n\n  addKarma() {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('auth-token')\n      },\n      body: JSON.stringify({\n        add_karma: 1,\n        user_id: this.state.user_id\n      })\n    };\n    fetch('http://127.0.0.1:8000/connect/add_karma/', requestOptions).then(response => {\n      response.json();\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        value: this.state.add_karma,\n        className: styles.add_button,\n        onClick: this.addKarma,\n        children: \"Karma+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Karma;","map":{"version":3,"names":["React","Component","LoggedInTester","styles","Karma","constructor","props","ShowProfile","foo","name","state","add_karma","user_id","other_user_id","addKarma","bind","componentDidMount","headers","localStorage","getItem","fetch","then","response","json","data","setState","id","catch","console","log","requestOptions","method","body","JSON","stringify","render","add_button"],"sources":["/Users/evelyn/Documents/GitHub/UC-Socially-Undead/src/frontend/src/pages/Karma.js"],"sourcesContent":["import React, { Component } from 'react';\n\n// eslint-disable-next-line\nimport LoggedInTester from '../buttons/LoggedInTester';\nimport styles from '../styles/Karma.module.css'\n\nclass Karma extends Component {\n  constructor (props) {\n    super(props);\n    this.state = { \n      foo: [],\n      add_karma: 0, \n      user_id: 0,\n      other_user_id: this.props.user_id\n    };\n    this.addKarma = this.addKarma.bind(this);\n  }\n\n  componentDidMount() {\n    const headers = {\"Content-Type\": \"application/json\"};\n\n    if (localStorage.getItem('auth-token')) {\n      headers[\"Authorization\"] = localStorage.getItem('auth-token');\n    }\n\n    fetch('http://127.0.0.1:8000/account/get_user_info/', { headers, })\n      .then(response => response.json())\n      .then((data) => {\n        this.setState({ foo: data })\n        this.setState({user_id: data.id})\n      })\n    .catch(console.log)\n  }\n\n  addKarma() {\n    const requestOptions = {\n      method: 'POST',\n      headers: { \n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('auth-token'),\n      },\n      body: JSON.stringify({\n        add_karma: 1, \n        user_id: this.state.user_id})\n    };\n    fetch('http://127.0.0.1:8000/connect/add_karma/', requestOptions)\n    .then(response => {response.json()})\n    .catch(console.log);\n  }\n\n  ShowProfile = ({ foo }) => {\n    return (<>\n    <p>ID: {foo['id']}</p>\n    <p className={styles.name}>\n        {foo['first_name']}\n        {' '}\n        {foo['last_name']}\n    </p>\n    <p>Email: {foo['email']}</p> \n    <p>College: {foo['user_college']}</p>\n    <p>Karma: {foo['user_karma']}</p>\n    </>);\n  }\n\n  render() {\n    return (\n      <>\n{/*\n        <p>\n          {\"Karma to add (testing): \"+ this.state.add_karma}\n        </p>\n*/}\n        <button\n          value={this.state.add_karma}\n          className={styles.add_button}\n          onClick={this.addKarma}\n        >\n          Karma+1\n        </button>\n{/* \n        <button\n          onClick={this.addKarma}\n          className={styles.backend_button}>\n          Send info to backend\n        </button>\n*/}\n      </>\n    );\n  }\n}\n\nexport default Karma\n\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;EAC5BI,WAAW,CAAEC,KAAF,EAAS;IAClB,MAAMA,KAAN;;IADkB,KA2CpBC,WA3CoB,GA2CN,QAAa;MAAA,IAAZ;QAAEC;MAAF,CAAY;MACzB,oBAAQ;QAAA,wBACR;UAAA,mBAAQA,GAAG,CAAC,IAAD,CAAX;QAAA;UAAA;UAAA;UAAA;QAAA,QADQ,eAER;UAAG,SAAS,EAAEL,MAAM,CAACM,IAArB;UAAA,WACKD,GAAG,CAAC,YAAD,CADR,EAEK,GAFL,EAGKA,GAAG,CAAC,WAAD,CAHR;QAAA;UAAA;UAAA;UAAA;QAAA,QAFQ,eAOR;UAAA,sBAAWA,GAAG,CAAC,OAAD,CAAd;QAAA;UAAA;UAAA;UAAA;QAAA,QAPQ,eAQR;UAAA,wBAAaA,GAAG,CAAC,cAAD,CAAhB;QAAA;UAAA;UAAA;UAAA;QAAA,QARQ,eASR;UAAA,sBAAWA,GAAG,CAAC,YAAD,CAAd;QAAA;UAAA;UAAA;UAAA;QAAA,QATQ;MAAA,gBAAR;IAWD,CAvDmB;;IAElB,KAAKE,KAAL,GAAa;MACXF,GAAG,EAAE,EADM;MAEXG,SAAS,EAAE,CAFA;MAGXC,OAAO,EAAE,CAHE;MAIXC,aAAa,EAAE,KAAKP,KAAL,CAAWM;IAJf,CAAb;IAMA,KAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;EACD;;EAEDC,iBAAiB,GAAG;IAClB,MAAMC,OAAO,GAAG;MAAC,gBAAgB;IAAjB,CAAhB;;IAEA,IAAIC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAJ,EAAwC;MACtCF,OAAO,CAAC,eAAD,CAAP,GAA2BC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA3B;IACD;;IAEDC,KAAK,CAAC,8CAAD,EAAiD;MAAEH;IAAF,CAAjD,CAAL,CACGI,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAESG,IAAD,IAAU;MACd,KAAKC,QAAL,CAAc;QAAEjB,GAAG,EAAEgB;MAAP,CAAd;MACA,KAAKC,QAAL,CAAc;QAACb,OAAO,EAAEY,IAAI,CAACE;MAAf,CAAd;IACD,CALH,EAMCC,KAND,CAMOC,OAAO,CAACC,GANf;EAOD;;EAEDf,QAAQ,GAAG;IACT,MAAMgB,cAAc,GAAG;MACrBC,MAAM,EAAE,MADa;MAErBd,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,iBAAiBC,YAAY,CAACC,OAAb,CAAqB,YAArB;MAFV,CAFY;MAMrBa,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBvB,SAAS,EAAE,CADQ;QAEnBC,OAAO,EAAE,KAAKF,KAAL,CAAWE;MAFD,CAAf;IANe,CAAvB;IAUAQ,KAAK,CAAC,0CAAD,EAA6CU,cAA7C,CAAL,CACCT,IADD,CACMC,QAAQ,IAAI;MAACA,QAAQ,CAACC,IAAT;IAAgB,CADnC,EAECI,KAFD,CAEOC,OAAO,CAACC,GAFf;EAGD;;EAgBDM,MAAM,GAAG;IACP,oBACE;MAAA,uBAME;QACE,KAAK,EAAE,KAAKzB,KAAL,CAAWC,SADpB;QAEE,SAAS,EAAER,MAAM,CAACiC,UAFpB;QAGE,OAAO,EAAE,KAAKtB,QAHhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IANF,iBADF;EAuBD;;AAlF2B;;AAqF9B,eAAeV,KAAf"},"metadata":{},"sourceType":"module"}