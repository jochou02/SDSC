{"ast":null,"code":"var _jsxFileName = \"/Users/evelyn/Documents/GitHub/UC-Socially-Undead/src/frontend/src/pages/Reviews.js\",\n    _s = $RefreshSig$();\n\n//import React, {useState, useEffect} from 'react'\nimport React, { useState } from 'react';\nimport '../styles/App.css';\nimport \"../styles/Reviews.css\";\nimport StarRatingComponent from 'react-star-rating-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Reviews() {\n  _s();\n\n  /*\r\n  const[classData,setClassData] = useState([ //temporary dummy data (i think the prof for this data is from wherever its routed from?)\r\n      {course_name:\"CSE 100\", avg_approval:\"93.2%\", avg_hours: \"11.33\", avg_grade:\"B (3.07)\", }, //not sure if names are correct\r\n  ]);\r\n  */\n  const [classData, setClassData] = useState({});\n  const [courseName] = useState(\"CSE 100\");\n  const [review, setReviews] = useState([// rating, description, course(course_dept, course_num,prof), student\n  ]);\n  const [rating, makeRating] = useState(\"\"); //state that holds the user's new rating\n\n  const [description, makeDescription] = useState(\"\"); //state that holds the user's new review\n\n  const [prof, makeProf] = useState(\"\"); //state that holds the prof the review is referring to\n\n  const onChange = e => {\n    //function which holds user description of rating\n    makeDescription(e.target.value);\n  };\n\n  const onStarClick = e => {\n    //function which holds users rating # (1 to 5)\n    makeRating(e); //console.log(e);\n  };\n\n  const profInput = e => {\n    //function that holds the prof the review is referring to\n    makeProf(e.target.value);\n  };\n\n  const onSubmitEvent = e => {\n    //function creates a new review and pushes into our reviews state\n    e.preventDefault();\n    let a = {\n      prof: prof,\n      rating: rating,\n      description: description\n    };\n    review.push(a); //might not need this bc sendDataToBackend updates the database before its fetched\n\n    console.log(review);\n    sendDataToBackend();\n  };\n\n  const sendDataToBackend = () => {\n    //supposed to send user inputted review and then fetch the data immediately after to update page\n    let a = {\n      prof: prof,\n      rating: rating,\n      description: description\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('auth-token')\n      },\n      body: JSON.stringify({\n        a\n      })\n    }; //Add a separate API request here to send user inputted review\n\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    }; //Authenticates user\n\n    if (localStorage.getItem('auth-token')) {\n      headers[\"Authorization\"] = localStorage.getItem('auth-token');\n    }\n\n    fetch('http://127.0.0.1:8000/review/get_reviews/', {\n      headers\n    }).then(response => response.json()).then(data => {\n      setReviews(data);\n    }).catch(console.log); //for class stats\n\n    const courseName = {\n      method: 'POST',\n      body: JSON.stringify({\n        course_name: 'CSE 100' //i think fill this in when routing?\n\n      })\n    };\n    fetch('http://127.0.0.1:8000/review/get_course_data/', courseName).then(response => response.json()).then(data => {\n      //console.log(data)\n      setClassData(data);\n    }).catch(console.log);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReviewPageContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ReviewStats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: courseName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"classStat\",\n        children: [\"Avg Class Approval:\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: classData.AvgApproval\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"classStat\",\n        children: [\"Avg Hours Committed:\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: classData.AvgTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"classStat\",\n        children: [\"Avg Grade:\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: classData.AvgGrade\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ReviewSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmitEvent,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write your own review!\",\n          type: \"text\",\n          className: \"reviewBox\",\n          onChange: onChange,\n          onSubmit: onSubmitEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Professor Name\",\n          className: \"profInput\",\n          onChange: profInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(StarRatingComponent, {\n          name: \"stars\",\n          onStarClick: onStarClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"reviewButton\",\n          children: \"Submit Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reviewTitle\",\n        children: \"Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), review.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reviews\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profName\",\n            children: [data.prof, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating_out_5\",\n              children: data.rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ratingDescrption\",\n            children: data.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Reviews, \"UzLfFVmkLRf5airOsFNiCazFyGk=\");\n\n_c = Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"names":["React","useState","StarRatingComponent","Reviews","classData","setClassData","courseName","review","setReviews","rating","makeRating","description","makeDescription","prof","makeProf","onChange","e","target","value","onStarClick","profInput","onSubmitEvent","preventDefault","a","push","console","log","sendDataToBackend","requestOptions","method","headers","localStorage","getItem","body","JSON","stringify","fetch","then","response","json","data","catch","course_name","AvgApproval","AvgTime","AvgGrade","map"],"sources":["/Users/evelyn/Documents/GitHub/UC-Socially-Undead/src/frontend/src/pages/Reviews.js"],"sourcesContent":["//import React, {useState, useEffect} from 'react'\r\nimport React, {useState} from 'react'\r\nimport '../styles/App.css'\r\nimport \"../styles/Reviews.css\"\r\nimport StarRatingComponent from 'react-star-rating-component';\r\n\r\nexport default function Reviews(){\r\n    \r\n    /*\r\n    const[classData,setClassData] = useState([ //temporary dummy data (i think the prof for this data is from wherever its routed from?)\r\n        {course_name:\"CSE 100\", avg_approval:\"93.2%\", avg_hours: \"11.33\", avg_grade:\"B (3.07)\", }, //not sure if names are correct\r\n    ]);\r\n    */\r\n\r\n    const[classData,setClassData] = \r\n        useState({});\r\n\r\n    const [courseName]  = useState(\"CSE 100\");\r\n\r\n    const[review, setReviews] = useState([ \r\n        // rating, description, course(course_dept, course_num,prof), student\r\n    ])\r\n\r\n    const[rating,makeRating] = useState(\"\");    //state that holds the user's new rating\r\n\r\n    const[description,makeDescription]=useState(\"\"); //state that holds the user's new review\r\n\r\n    const[prof,makeProf]=useState(\"\"); //state that holds the prof the review is referring to\r\n\r\n    \r\n    const onChange = (e) => {   //function which holds user description of rating\r\n        makeDescription(e.target.value);\r\n    }\r\n    const onStarClick=(e)=>{ //function which holds users rating # (1 to 5)\r\n        makeRating(e);\r\n        //console.log(e);\r\n    }\r\n\r\n    const profInput=(e)=>{ //function that holds the prof the review is referring to\r\n        makeProf(e.target.value);\r\n    }\r\n\r\n    const onSubmitEvent = (e) => {  //function creates a new review and pushes into our reviews state\r\n        e.preventDefault();\r\n        let a = {prof:prof, rating:rating, description:description}\r\n        review.push(a) //might not need this bc sendDataToBackend updates the database before its fetched\r\n        console.log(review);\r\n        sendDataToBackend();\r\n    }\r\n\r\n    \r\n    const sendDataToBackend=()=>{\r\n        //supposed to send user inputted review and then fetch the data immediately after to update page\r\n        let a = {prof:prof, rating:rating, description:description}\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { \r\n              'Content-Type': 'application/json',\r\n              'Authorization': localStorage.getItem('auth-token'),\r\n            },\r\n            body: JSON.stringify({a})\r\n        };\r\n        //Add a separate API request here to send user inputted review\r\n\r\n        const headers = {\"Content-Type\": \"application/json\"};\r\n\r\n        //Authenticates user\r\n        if (localStorage.getItem('auth-token')) {\r\n              headers[\"Authorization\"] = localStorage.getItem('auth-token');\r\n        }\r\n        \r\n        fetch('http://127.0.0.1:8000/review/get_reviews/', {headers, }) \r\n            .then(response => response.json())\r\n            .then((data) => {setReviews(data)})\r\n        .catch(console.log)\r\n\r\n        //for class stats\r\n        const courseName = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                course_name: 'CSE 100' //i think fill this in when routing?\r\n            })\r\n        }\r\n\r\n        fetch('http://127.0.0.1:8000/review/get_course_data/', courseName) \r\n                    .then(response => response.json())\r\n                    .then((data) => {\r\n                    //console.log(data)\r\n                    setClassData(data)\r\n        })\r\n        .catch(console.log)\r\n    }\r\n    \r\n    \r\n    return (\r\n        \r\n        <div className = \"ReviewPageContainer\"> \r\n            <div className = 'ReviewStats'>\r\n            <div>{courseName}</div>\r\n                <div className = \"classStat\">\r\n                    Avg Class Approval:\r\n                    <div>{classData.AvgApproval}</div>    \r\n                </div>\r\n                <div className = \"classStat\">\r\n                    Avg Hours Committed:\r\n                    <div>{classData.AvgTime}</div>    \r\n                </div>\r\n                <div className = \"classStat\">\r\n                    Avg Grade:\r\n                    <div>{classData.AvgGrade}</div> \r\n                </div>\r\n            </div>\r\n\r\n            <div className = 'ReviewSection'>\r\n            <form onSubmit = {onSubmitEvent}>\r\n                <textarea placeholder=\"Write your own review!\" type=\"text\" \r\n                className='reviewBox' onChange={onChange} onSubmit={onSubmitEvent} \r\n                />\r\n                <input type=\"text\" placeholder=\"Professor Name\" className='profInput' onChange={profInput}></input>\r\n                <StarRatingComponent name = \"stars\" onStarClick={onStarClick}></StarRatingComponent>\r\n                <button type =\"submit\" className = \"reviewButton\">\r\n                Submit Review\r\n                </button>\r\n            </form>\r\n            <div className = 'reviewTitle'>Reviews</div>\r\n            {review.map(data => {\r\n                return <div className='reviews'>\r\n                <div className = 'profName'>{data.prof}\r\n                <div className = 'rating_out_5'>{data.rating}</div>\r\n                </div>\r\n                \r\n                <div className = 'ratingDescrption'>{data.description}</div>\r\n                </div>\r\n            })}\r\n           \r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}